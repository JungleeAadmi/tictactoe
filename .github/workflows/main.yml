name: Build and Publish Docker Image

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU (multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Metadata (owner lowercase + version)
        id: meta
        shell: bash
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          OWNER_LC="$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')"
          echo "OWNER_LC=$OWNER_LC" >> "$GITHUB_OUTPUT"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VER="${GITHUB_REF#refs/tags/}"
          else
            VER="edge"
          fi
          echo "VERSION=$VER" >> "$GITHUB_OUTPUT"

       - name: Build and push (branch -> edge/latest)
        if: startsWith(github.ref, 'refs/heads/')
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/tictactoe:edge
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/tictactoe:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push (tag -> vX.Y.Z/latest)
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/tictactoe:${{ steps.meta.outputs.VERSION }}
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/tictactoe:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
